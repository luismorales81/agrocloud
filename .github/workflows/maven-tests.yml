name: Maven Tests - AgroGestion

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASS }}
          MYSQL_DATABASE: agrocloud_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -p${{ secrets.DB_PASS }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Wait for MySQL
      run: |
        echo "Esperando a que MySQL esté listo..."
        for i in {1..30}; do
          if mysqladmin ping -h"127.0.0.1" -P3306 -u"root" -p"${{ secrets.DB_PASS }}" --silent; then
            echo "MySQL está listo!"
            break
          fi
          echo "Intento $i/30: MySQL no está listo, esperando..."
          sleep 2
        done
        
    - name: Verify MySQL connection
      run: |
        echo "Verificando conexión a MySQL..."
        mysql -h 127.0.0.1 -P 3306 -u root -p"${{ secrets.DB_PASS }}" -e "SHOW DATABASES;"
        
    - name: Create test database
      run: |
        echo "Creando base de datos de pruebas..."
        mysql -h 127.0.0.1 -P 3306 -u root -p"${{ secrets.DB_PASS }}" -e "CREATE DATABASE IF NOT EXISTS agrocloud_test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
        
    - name: Display Maven version
      run: mvn -version
        
    - name: Display Java version
      run: java -version
        
    - name: List test files
      run: |
        echo "=== Archivos de prueba encontrados ==="
        find src/test -name "*.java" -type f
        
    - name: Run Maven clean
      run: mvn clean
      
    - name: Run Maven compile
      run: mvn compile
      
    - name: Run Maven test-compile
      run: mvn test-compile
      
    - name: Run tests with detailed output
      run: |
        echo "=== Ejecutando pruebas con salida detallada ==="
        mvn test -Dspring.profiles.active=test \
                 -Dspring.datasource.url=jdbc:mysql://127.0.0.1:3306/agrocloud_test?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true \
                 -Dspring.datasource.username=${{ secrets.DB_USER }} \
                 -Dspring.datasource.password=${{ secrets.DB_PASS }} \
                 -Dspring.jpa.hibernate.ddl-auto=create-drop \
                 -Dspring.sql.init.mode=always \
                 -Dspring.sql.init.schema-locations=classpath:test-schema.sql \
                 -Dspring.sql.init.data-locations=classpath:test-data.sql \
                 --batch-mode \
                 --show-version
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        
    - name: Generate test reports
      run: mvn jacoco:report
      if: always()
      
    - name: List generated files
      run: |
        echo "=== Archivos generados ==="
        ls -la target/ || echo "No hay directorio target"
        ls -la target/surefire-reports/ || echo "No hay reportes de surefire"
        ls -la target/site/jacoco/ || echo "No hay reportes de jacoco"
      if: always()
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          target/surefire-reports/
          target/site/jacoco/
        retention-days: 30